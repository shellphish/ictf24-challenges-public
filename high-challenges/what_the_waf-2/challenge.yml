# This file represents the base specification of your challenge. It is used by
# other tools to install and deploy your challenge.

# Required sections
name: "what_the_waf-2"
author: "degrigis"
category: "web"
description: "The engineers at Crypto Bros Inc. are gloriously back and they are testing out a new version of their amazing LLM WAF.
This new security solution analyzes in real time every request sent to their server and drop the one
containing malicious inputs.

At Crypto Bros Inc. people are (as always) pretty confident that this will stop every possible hacking attempt.

Rumors are saying that there is a very wealthy user on that platform, and you known... money attracts hackers ;)

However, every hacking attempt we made so far seem to be caught by this AI powered WAF :/

Can you help us finding a way to crack the firewall and find this wealthy user?"


value: 500
type: dynamic

# The extra field provides additional fields for data during the install/sync commands/
# Fields in extra can be used to supply additional information for other challenge types
# For example the follow extra field is for dynamic challenges. To use these following
# extra fields, set the type to "dynamic" and uncomment the "extra" section below
extra:
    initial: 500
    decay: 10
    minimum: 50

# Settings used for Dockerfile deployment
# If not used, remove or set to null
# If you have a Dockerfile set to .
# If you have an imaged hosted on Docker set to the image url (e.g. python/3.8:latest, registry.gitlab.com/python/3.8:latest)
# Follow Docker best practices and assign a tag
image: .

# Specify a protocol that should be used to connect to the running image
# For example if the image is a website you can specify http or https
# Otherwise you can specify tcp
protocol: http

# Specify a host to deploy the challenge onto.
# The currently supported URI schemes are ssh:// and registry://
# ssh is an ssh URI where the above image will be copied to and deployed (e.g. ssh://root@123.123.123.123
# registry is a Docker registry tag (e.g registry://registry.example.com/test/image)
# host can also be specified during the deploy process: `ctf challenge deploy challenge --host=ssh://root@123.123.123.123`
host: null

# Optional settings

# connection_info is used to provide a link, hostname, or instructions on how to connect to a challenge
connection_info: null

# healthcheck is a tool/script used to check a challenge
# If connection_info was provided to CTFd when the challenge was installed, it will be passed to the healthcheck script:
# ./writeup/exploit.sh --connection-info "nc hostname 12345"
healthcheck: null

# Can be removed if unused
# attempts: 5

# Flags specify answers that your challenge use. You should generally provide at least one.
# Can be removed if unused
# Accepts strings or dictionaries of CTFd API data
flags:
    # A static case sensitive flag
    - ictf{Th0ught_Th3_WAF_Was_My_Sh1eld}
    # A static case sensitive flag created with a dictionary
    #- {
    #    type: "static",
    #    content: "flag{wat}",
    #}
    # A static case insensitive flag
    #- {
    #    type: "static",
    #    content: "flag{wat}",
    #    data: "case_insensitive",
    #}
    # A regex case insensitive flag
    #- {
    #    type: "regex",
    #    content: "(.*)STUFF(.*)",
    #    data: "case_insensitive",
    #}

# Topics are used to help tell what techniques/information a challenge involves
# They are generally only visible to admins
# Accepts strings
topics:
    - information disclosure
    - llm
    - web security
    - ldap injection

# Tags are used to provide additional public tagging to a challenge
# Can be removed if unused
# Accepts strings
tags:
    - web

# Hints are used to give players a way to buy or have suggestions. They are not
# required but can be nice.
# Can be removed if unused
# Accepts dictionaries or strings
#hints:
#    - {
#        content: "Maybe cut-and-paste something?",
#        cost: 50
#    }

# Requirements are used to make a challenge require another challenge to be
# solved before being available.
# Can be removed if unused
# Accepts challenge names as strings or challenge IDs as integers
#requirements:
#    - "Warmup"
#    - "Are you alive"

# The state of the challenge.
# If the field is omitted, the challenge is visible by default.
# If provided, the field can take one of two values: hidden, visible.
state: hidden

# Specifies what version of the challenge specification was used.
# Subject to change until ctfcli v1.0.0
version: "0.1"
